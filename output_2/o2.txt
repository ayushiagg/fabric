    orderer0:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer0
        environment:
            - ORDERER_HOST=orderer0
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 7050:7050
        networks:
            - elasticoNet

    orderer1:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer1
        environment:
            - ORDERER_HOST=orderer1
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 7550:7050
        networks:
            - elasticoNet

    orderer2:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer2
        environment:
            - ORDERER_HOST=orderer2
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 8050:7050
        networks:
            - elasticoNet

    orderer3:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer3
        environment:
            - ORDERER_HOST=orderer3
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 8550:7050
        networks:
            - elasticoNet

    orderer4:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer4
        environment:
            - ORDERER_HOST=orderer4
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 9050:7050
        networks:
            - elasticoNet

    orderer5:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer5
        environment:
            - ORDERER_HOST=orderer5
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 9550:7050
        networks:
            - elasticoNet

    orderer6:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer6
        environment:
            - ORDERER_HOST=orderer6
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 10050:7050
        networks:
            - elasticoNet

    orderer7:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer7
        environment:
            - ORDERER_HOST=orderer7
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 10550:7050
        networks:
            - elasticoNet

    orderer8:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer8
        environment:
            - ORDERER_HOST=orderer8
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 11050:7050
        networks:
            - elasticoNet

    orderer9:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer9
        environment:
            - ORDERER_HOST=orderer9
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 11550:7050
        networks:
            - elasticoNet

    orderer10:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer10
        environment:
            - ORDERER_HOST=orderer10
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 12050:7050
        networks:
            - elasticoNet

    orderer11:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer11
        environment:
            - ORDERER_HOST=orderer11
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 12550:7050
        networks:
            - elasticoNet

    orderer12:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer12
        environment:
            - ORDERER_HOST=orderer12
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 13050:7050
        networks:
            - elasticoNet

    orderer13:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer13
        environment:
            - ORDERER_HOST=orderer13
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 13550:7050
        networks:
            - elasticoNet

    orderer14:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer14
        environment:
            - ORDERER_HOST=orderer14
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 14050:7050
        networks:
            - elasticoNet

    orderer15:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer15
        environment:
            - ORDERER_HOST=orderer15
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 14550:7050
        networks:
            - elasticoNet

    orderer16:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer16
        environment:
            - ORDERER_HOST=orderer16
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 15050:7050
        networks:
            - elasticoNet

    orderer17:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer17
        environment:
            - ORDERER_HOST=orderer17
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 15550:7050
        networks:
            - elasticoNet

    orderer18:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer18
        environment:
            - ORDERER_HOST=orderer18
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 16050:7050
        networks:
            - elasticoNet

    orderer19:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer19
        environment:
            - ORDERER_HOST=orderer19
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 16550:7050
        networks:
            - elasticoNet

    orderer20:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer20
        environment:
            - ORDERER_HOST=orderer20
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 17050:7050
        networks:
            - elasticoNet

    orderer21:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer21
        environment:
            - ORDERER_HOST=orderer21
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 17550:7050
        networks:
            - elasticoNet

    orderer22:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer22
        environment:
            - ORDERER_HOST=orderer22
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 18050:7050
        networks:
            - elasticoNet

    orderer23:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer23
        environment:
            - ORDERER_HOST=orderer23
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 18550:7050
        networks:
            - elasticoNet

    orderer24:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer24
        environment:
            - ORDERER_HOST=orderer24
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 19050:7050
        networks:
            - elasticoNet

    orderer25:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer25
        environment:
            - ORDERER_HOST=orderer25
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 19550:7050
        networks:
            - elasticoNet

    orderer26:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer26
        environment:
            - ORDERER_HOST=orderer26
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 20050:7050
        networks:
            - elasticoNet

    orderer27:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer27
        environment:
            - ORDERER_HOST=orderer27
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 20550:7050
        networks:
            - elasticoNet

    orderer28:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer28
        environment:
            - ORDERER_HOST=orderer28
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 21050:7050
        networks:
            - elasticoNet

    orderer29:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer29
        environment:
            - ORDERER_HOST=orderer29
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 21550:7050
        networks:
            - elasticoNet

    orderer30:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer30
        environment:
            - ORDERER_HOST=orderer30
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 22050:7050
        networks:
            - elasticoNet

    orderer31:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer31
        environment:
            - ORDERER_HOST=orderer31
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 22550:7050
        networks:
            - elasticoNet

    orderer32:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer32
        environment:
            - ORDERER_HOST=orderer32
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 23050:7050
        networks:
            - elasticoNet

    orderer33:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer33
        environment:
            - ORDERER_HOST=orderer33
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 23550:7050
        networks:
            - elasticoNet

    orderer34:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer34
        environment:
            - ORDERER_HOST=orderer34
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 24050:7050
        networks:
            - elasticoNet

    orderer35:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer35
        environment:
            - ORDERER_HOST=orderer35
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 24550:7050
        networks:
            - elasticoNet

    orderer36:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer36
        environment:
            - ORDERER_HOST=orderer36
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 25050:7050
        networks:
            - elasticoNet

    orderer37:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer37
        environment:
            - ORDERER_HOST=orderer37
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 25550:7050
        networks:
            - elasticoNet

    orderer38:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer38
        environment:
            - ORDERER_HOST=orderer38
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 26050:7050
        networks:
            - elasticoNet

    orderer39:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer39
        environment:
            - ORDERER_HOST=orderer39
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 26550:7050
        networks:
            - elasticoNet

    orderer40:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer40
        environment:
            - ORDERER_HOST=orderer40
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 27050:7050
        networks:
            - elasticoNet

    orderer41:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer41
        environment:
            - ORDERER_HOST=orderer41
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 27550:7050
        networks:
            - elasticoNet

    orderer42:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer42
        environment:
            - ORDERER_HOST=orderer42
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 28050:7050
        networks:
            - elasticoNet

    orderer43:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer43
        environment:
            - ORDERER_HOST=orderer43
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 28550:7050
        networks:
            - elasticoNet

    orderer44:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer44
        environment:
            - ORDERER_HOST=orderer44
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 29050:7050
        networks:
            - elasticoNet

    orderer45:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer45
        environment:
            - ORDERER_HOST=orderer45
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 29550:7050
        networks:
            - elasticoNet

    orderer46:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer46
        environment:
            - ORDERER_HOST=orderer46
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 30050:7050
        networks:
            - elasticoNet

    orderer47:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer47
        environment:
            - ORDERER_HOST=orderer47
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 30550:7050
        networks:
            - elasticoNet

    orderer48:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer48
        environment:
            - ORDERER_HOST=orderer48
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 31050:7050
        networks:
            - elasticoNet

    orderer49:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer49
        environment:
            - ORDERER_HOST=orderer49
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 31550:7050
        networks:
            - elasticoNet

    orderer50:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer50
        environment:
            - ORDERER_HOST=orderer50
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 32050:7050
        networks:
            - elasticoNet

    orderer51:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer51
        environment:
            - ORDERER_HOST=orderer51
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 32550:7050
        networks:
            - elasticoNet

    orderer52:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer52
        environment:
            - ORDERER_HOST=orderer52
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 33050:7050
        networks:
            - elasticoNet

    orderer53:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer53
        environment:
            - ORDERER_HOST=orderer53
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 33550:7050
        networks:
            - elasticoNet

    orderer54:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer54
        environment:
            - ORDERER_HOST=orderer54
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 34050:7050
        networks:
            - elasticoNet

    orderer55:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer55
        environment:
            - ORDERER_HOST=orderer55
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 34550:7050
        networks:
            - elasticoNet

    orderer56:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer56
        environment:
            - ORDERER_HOST=orderer56
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 35050:7050
        networks:
            - elasticoNet

    orderer57:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer57
        environment:
            - ORDERER_HOST=orderer57
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 35550:7050
        networks:
            - elasticoNet

    orderer58:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer58
        environment:
            - ORDERER_HOST=orderer58
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 36050:7050
        networks:
            - elasticoNet

    orderer59:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer59
        environment:
            - ORDERER_HOST=orderer59
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 36550:7050
        networks:
            - elasticoNet

    orderer60:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer60
        environment:
            - ORDERER_HOST=orderer60
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 37050:7050
        networks:
            - elasticoNet

    orderer61:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer61
        environment:
            - ORDERER_HOST=orderer61
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 37550:7050
        networks:
            - elasticoNet

    orderer62:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer62
        environment:
            - ORDERER_HOST=orderer62
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 38050:7050
        networks:
            - elasticoNet

    orderer63:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer63
        environment:
            - ORDERER_HOST=orderer63
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 38550:7050
        networks:
            - elasticoNet

    orderer64:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer64
        environment:
            - ORDERER_HOST=orderer64
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 39050:7050
        networks:
            - elasticoNet

    orderer65:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
            - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
            - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
            - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
        volumes:
            - ../config/:/var/hyperledger/configs
            - ../crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
            # - ../fabric:/opt/gopath/src/github.com/hyperledger/fabric
            - ../bin/consumer:/var/hyperledger/fabric/orderer/elastico
            - /usr/local/go:/usr/local/go
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        container_name: orderer65
        environment:
            - ORDERER_HOST=orderer65
            - CONFIGTX_ORDERER_ORDERERTYPE=elastico
            - RABBITMQ_CONNECT=rabbitmq0:5672
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_ABSOLUTEMAXBYTES=${ORDERER_ABSOLUTEMAXBYTES}
            - ORDERER_PREFERREDMAXBYTES=${ORDERER_PREFERREDMAXBYTES}
        volumes:
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/msp:/var/hyperledger/msp
            - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0/tls:/var/hyperledger/tls
            - ../config/:/var/hyperledger/configs
        depends_on:
            - rabbitmq0
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
        ports:
          - 39550:7050
        networks:
            - elasticoNet

